# Generated by Django 4.2.23 on 2025-06-10 22:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rides', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('service_available', models.BooleanField(default=False)),
                ('launch_date', models.DateField(blank=True, null=True)),
                ('bounds_coordinates', models.JSONField(blank=True, default=dict)),
                ('center_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('center_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=3, unique=True)),
                ('currency', models.CharField(max_length=3)),
                ('phone_code', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('bounds_coordinates', models.JSONField(blank=True, default=dict)),
                ('center_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('center_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GeofenceZone',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('zone_type', models.CharField(choices=[('pickup', 'Pickup Zone'), ('dropoff', 'Dropoff Zone'), ('restricted', 'Restricted Zone'), ('speed_limit', 'Speed Limit Zone'), ('notification', 'Notification Zone')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('boundary_coordinates', models.JSONField(blank=True, default=list)),
                ('center_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('radius_meters', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('trigger_on_enter', models.BooleanField(default=True)),
                ('trigger_on_exit', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['city', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LocationAnalytics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('total_pickups', models.PositiveIntegerField(default=0)),
                ('total_dropoffs', models.PositiveIntegerField(default=0)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('unique_users', models.PositiveIntegerField(default=0)),
                ('peak_hour_pickups', models.PositiveIntegerField(default=0)),
                ('peak_hour_start', models.TimeField(blank=True, null=True)),
                ('peak_hour_end', models.TimeField(blank=True, null=True)),
                ('average_wait_time', models.PositiveIntegerField(default=0)),
                ('average_surge_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('average_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('activity_type', models.CharField(choices=[('idle', 'Idle'), ('driving', 'Driving'), ('walking', 'Walking'), ('in_ride', 'In Ride'), ('waiting', 'Waiting')], default='idle', max_length=20)),
                ('device_id', models.CharField(blank=True, max_length=100)),
                ('app_version', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LocationSearchLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=500)),
                ('search_type', models.CharField(choices=[('pickup', 'Pickup Location'), ('destination', 'Destination'), ('general', 'General Search')], max_length=20)),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('user_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('user_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('session_id', models.UUIDField(default=uuid.uuid4)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('place_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('airport', 'Airport'), ('hospital', 'Hospital'), ('school', 'School'), ('mall', 'Shopping Mall'), ('restaurant', 'Restaurant'), ('hotel', 'Hotel'), ('landmark', 'Landmark'), ('other', 'Other')], default='other', max_length=20)),
                ('address', models.TextField()),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('google_place_id', models.CharField(blank=True, max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('pickup_count', models.PositiveIntegerField(default=0)),
                ('dropoff_count', models.PositiveIntegerField(default=0)),
                ('search_count', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-pickup_count', '-dropoff_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PopularDestination',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('destination_type', models.CharField(choices=[('frequent', 'Frequently Visited'), ('trending', 'Trending'), ('seasonal', 'Seasonal'), ('event', 'Event-based')], max_length=20)),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('weekly_visits', models.PositiveIntegerField(default=0)),
                ('monthly_visits', models.PositiveIntegerField(default=0)),
                ('peak_hours', models.JSONField(blank=True, default=list)),
                ('peak_days', models.JSONField(blank=True, default=list)),
                ('season', models.CharField(choices=[('spring', 'Spring'), ('summer', 'Summer'), ('autumn', 'Autumn'), ('winter', 'Winter'), ('all_year', 'All Year')], default='all_year', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-score', '-weekly_visits'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('origin_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('origin_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('destination_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('destination_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('distance_meters', models.PositiveIntegerField()),
                ('duration_seconds', models.PositiveIntegerField()),
                ('polyline', models.TextField()),
                ('origin_address', models.TextField()),
                ('destination_address', models.TextField()),
                ('traffic_duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('traffic_condition', models.CharField(choices=[('light', 'Light Traffic'), ('moderate', 'Moderate Traffic'), ('heavy', 'Heavy Traffic'), ('severe', 'Severe Traffic')], default='light', max_length=20)),
                ('avoid_tolls', models.BooleanField(default=False)),
                ('avoid_highways', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('usage_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSavedPlace',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('custom_name', models.CharField(blank=True, max_length=100)),
                ('is_favorite', models.BooleanField(default=False)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by_users', to='location.place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_places', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_favorite', '-usage_count', '-last_used'],
            },
        ),
        migrations.CreateModel(
            name='TrafficCondition',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('segment_start_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('segment_start_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('segment_end_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('segment_end_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('severity', models.CharField(choices=[('light', 'Light'), ('moderate', 'Moderate'), ('heavy', 'Heavy'), ('severe', 'Severe')], max_length=20)),
                ('speed_kmh', models.PositiveIntegerField()),
                ('delay_minutes', models.PositiveIntegerField(default=0)),
                ('incident_type', models.CharField(blank=True, choices=[('accident', 'Accident'), ('construction', 'Construction'), ('event', 'Event'), ('weather', 'Weather'), ('congestion', 'Congestion'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('expires_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traffic_conditions', to='location.route')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('bounds_coordinates', models.JSONField(blank=True, default=dict)),
                ('center_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('center_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='location.country')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceZone',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('zone_type', models.CharField(choices=[('standard', 'Standard Zone'), ('premium', 'Premium Zone'), ('airport', 'Airport Zone'), ('restricted', 'Restricted Zone'), ('surge', 'Surge Zone')], default='standard', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('base_fare_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('surge_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('max_wait_time', models.PositiveIntegerField(default=300)),
                ('priority_level', models.PositiveIntegerField(default=1)),
                ('boundary_coordinates', models.JSONField(blank=True, default=list)),
                ('center_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_zones', to='location.city')),
            ],
            options={
                'ordering': ['city', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['expires_at'], name='location_ro_expires_3a9cef_idx'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['usage_count'], name='location_ro_usage_c_4af625_idx'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['origin_latitude', 'origin_longitude'], name='location_ro_origin__141202_idx'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['destination_latitude', 'destination_longitude'], name='location_ro_destina_fb9ab4_idx'),
        ),
        migrations.AddField(
            model_name='populardestination',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='popularity_records', to='location.place'),
        ),
        migrations.AddField(
            model_name='place',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='location.city'),
        ),
        migrations.AddField(
            model_name='place',
            name='service_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='places', to='location.servicezone'),
        ),
        migrations.AddField(
            model_name='locationsearchlog',
            name='selected_place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='search_selections', to='location.place'),
        ),
        migrations.AddField(
            model_name='locationsearchlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_searches', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='locationhistory',
            name='ride',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to='rides.ride'),
        ),
        migrations.AddField(
            model_name='locationhistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='locationanalytics',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='location.city'),
        ),
        migrations.AddField(
            model_name='locationanalytics',
            name='place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='location.place'),
        ),
        migrations.AddField(
            model_name='locationanalytics',
            name='service_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='location.servicezone'),
        ),
        migrations.AddField(
            model_name='geofencezone',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofence_zones', to='location.city'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='location.state'),
        ),
        migrations.AlterUniqueTogether(
            name='usersavedplace',
            unique_together={('user', 'place')},
        ),
        migrations.AddIndex(
            model_name='trafficcondition',
            index=models.Index(fields=['route', 'is_active'], name='location_tr_route_i_b98d1c_idx'),
        ),
        migrations.AddIndex(
            model_name='trafficcondition',
            index=models.Index(fields=['severity'], name='location_tr_severit_13933b_idx'),
        ),
        migrations.AddIndex(
            model_name='trafficcondition',
            index=models.Index(fields=['expires_at'], name='location_tr_expires_76feb4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together={('country', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='servicezone',
            unique_together={('city', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='populardestination',
            unique_together={('place', 'destination_type', 'season')},
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['city', 'place_type'], name='location_pl_city_id_d07883_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['latitude', 'longitude'], name='location_pl_latitud_6af320_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['is_popular', 'is_active'], name='location_pl_is_popu_e16b09_idx'),
        ),
        migrations.AddIndex(
            model_name='locationsearchlog',
            index=models.Index(fields=['user', 'created_at'], name='location_lo_user_id_c09669_idx'),
        ),
        migrations.AddIndex(
            model_name='locationsearchlog',
            index=models.Index(fields=['query'], name='location_lo_query_1f58a3_idx'),
        ),
        migrations.AddIndex(
            model_name='locationsearchlog',
            index=models.Index(fields=['search_type'], name='location_lo_search__6418ef_idx'),
        ),
        migrations.AddIndex(
            model_name='locationhistory',
            index=models.Index(fields=['user', 'created_at'], name='location_lo_user_id_21ea6a_idx'),
        ),
        migrations.AddIndex(
            model_name='locationhistory',
            index=models.Index(fields=['ride', 'created_at'], name='location_lo_ride_id_4d782e_idx'),
        ),
        migrations.AddIndex(
            model_name='locationhistory',
            index=models.Index(fields=['activity_type'], name='location_lo_activit_0a9769_idx'),
        ),
        migrations.AddIndex(
            model_name='locationhistory',
            index=models.Index(fields=['latitude', 'longitude'], name='location_lo_latitud_67b7d6_idx'),
        ),
        migrations.AddIndex(
            model_name='locationanalytics',
            index=models.Index(fields=['date', 'city'], name='location_lo_date_1f0581_idx'),
        ),
        migrations.AddIndex(
            model_name='locationanalytics',
            index=models.Index(fields=['total_pickups'], name='location_lo_total_p_6df592_idx'),
        ),
        migrations.AddIndex(
            model_name='locationanalytics',
            index=models.Index(fields=['total_revenue'], name='location_lo_total_r_4e8a3f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='locationanalytics',
            unique_together={('date', 'place', 'service_zone', 'city')},
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('state', 'name')},
        ),
    ]

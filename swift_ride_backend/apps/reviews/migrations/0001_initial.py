# Generated by Django 5.2.2 on 2025-06-09 00:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rides', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Review Category',
                'verbose_name_plural': 'Review Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReviewIncentive',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('incentive_type', models.CharField(choices=[('discount', 'Discount'), ('points', 'Loyalty Points'), ('credit', 'Ride Credit'), ('badge', 'Achievement Badge')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('minimum_comment_length', models.PositiveIntegerField(default=0)),
                ('requires_categories', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('template_type', models.CharField(choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative')], max_length=20)),
                ('suggested_rating', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['template_type', 'suggested_rating'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_type', models.CharField(choices=[('driver_review', 'Driver Review'), ('rider_review', 'Rider Review'), ('platform_review', 'Platform Review')], max_length=20)),
                ('overall_rating', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('flagged', 'Flagged')], default='pending', max_length=20)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('moderation_notes', models.TextField(blank=True)),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('not_helpful_count', models.PositiveIntegerField(default=0)),
                ('report_count', models.PositiveIntegerField(default=0)),
                ('response', models.TextField(blank=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='rides.ride')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewRating',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.reviewcategory')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_ratings', to='reviews.review')),
            ],
            options={
                'unique_together': {('review', 'category')},
            },
        ),
        migrations.AddField(
            model_name='review',
            name='categories',
            field=models.ManyToManyField(blank=True, through='reviews.ReviewRating', to='reviews.reviewcategory'),
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate Content'), ('spam', 'Spam'), ('fake', 'Fake Review'), ('harassment', 'Harassment'), ('discrimination', 'Discrimination'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_reports', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_review_reports', to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reviews.review')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewAnalytics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('reviews_given', models.PositiveIntegerField(default=0)),
                ('reviews_received', models.PositiveIntegerField(default=0)),
                ('average_rating_given', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('average_rating_received', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('helpful_votes_received', models.PositiveIntegerField(default=0)),
                ('reports_received', models.PositiveIntegerField(default=0)),
                ('review_response_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_review_length', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpfulness',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vote', models.CharField(choices=[('helpful', 'Helpful'), ('not_helpful', 'Not Helpful')], max_length=20)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpfulness_votes', to='reviews.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('review', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ReviewIncentiveUsage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value_awarded', models.DecimalField(decimal_places=2, max_digits=10)),
                ('incentive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='reviews.reviewincentive')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incentive_usages', to='reviews.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_incentive_usages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('incentive', 'review')},
            },
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['reviewee', 'status'], name='reviews_rev_reviewe_31e2bd_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['review_type', 'status'], name='reviews_rev_review__541c5b_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['overall_rating'], name='reviews_rev_overall_96630a_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['created_at'], name='reviews_rev_created_bdcc91_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('ride', 'reviewer', 'reviewee')},
        ),
        migrations.AlterUniqueTogether(
            name='reviewreport',
            unique_together={('review', 'reporter')},
        ),
    ]

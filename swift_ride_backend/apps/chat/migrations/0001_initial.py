# Generated by Django 5.2.2 on 2025-06-08 09:57

import apps.common.utils
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rides', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('room_id', models.CharField(max_length=100, unique=True)),
                ('room_type', models.CharField(choices=[('ride', 'Ride Chat'), ('support', 'Support Chat'), ('general', 'General Chat')], default='ride', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived'), ('blocked', 'Blocked')], default='active', max_length=10)),
                ('is_encrypted', models.BooleanField(default=True)),
                ('auto_delete_after_days', models.PositiveIntegerField(default=30)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_chat_rooms', to=settings.AUTH_USER_MODEL)),
                ('ride', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_room', to='rides.ride')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rider_chat_rooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ChatSettings',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_notifications', models.BooleanField(default=True)),
                ('voice_message_notifications', models.BooleanField(default=True)),
                ('file_notifications', models.BooleanField(default=True)),
                ('read_receipts', models.BooleanField(default=True)),
                ('online_status', models.BooleanField(default=True)),
                ('auto_delete_messages', models.BooleanField(default=False)),
                ('auto_delete_after_days', models.PositiveIntegerField(default=30)),
                ('voice_message_auto_play', models.BooleanField(default=False)),
                ('voice_transcription', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('voice', 'Voice Message'), ('image', 'Image'), ('file', 'File'), ('location', 'Location'), ('system', 'System Message')], default='text', max_length=10)),
                ('content', models.TextField(blank=True, null=True)),
                ('encrypted_content', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='sent', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_name', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileAttachment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=apps.common.utils.get_file_path)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('file_size', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=apps.common.utils.get_file_path)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='file_attachment', to='chat.message')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChatModerationLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('warning', 'Warning'), ('message_deleted', 'Message Deleted'), ('user_muted', 'User Muted'), ('chat_blocked', 'Chat Blocked'), ('inappropriate_content', 'Inappropriate Content')], max_length=25)),
                ('reason', models.TextField()),
                ('automated', models.BooleanField(default=False)),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_logs', to='chat.chatroom')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderation_logs', to='chat.message')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VoiceNote',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audio_file', models.FileField(upload_to=apps.common.utils.get_file_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav', 'ogg', 'm4a'])])),
                ('duration_seconds', models.PositiveIntegerField()),
                ('file_size', models.PositiveIntegerField()),
                ('transcription', models.TextField(blank=True, null=True)),
                ('is_transcribed', models.BooleanField(default=False)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='voice_note', to='chat.message')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageStatus',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_updates', to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_statuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'unique_together': {('message', 'user', 'status')},
            },
        ),
    ]

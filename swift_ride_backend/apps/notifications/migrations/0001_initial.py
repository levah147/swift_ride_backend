# Generated by Django 5.2.2 on 2025-06-08 10:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0001_initial'),
        ('rides', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('notification_type', models.CharField(choices=[('ride_request', 'Ride Request'), ('ride_accepted', 'Ride Accepted'), ('ride_started', 'Ride Started'), ('ride_completed', 'Ride Completed'), ('ride_cancelled', 'Ride Cancelled'), ('driver_arrived', 'Driver Arrived'), ('payment_received', 'Payment Received'), ('payment_failed', 'Payment Failed'), ('new_message', 'New Message'), ('voice_message', 'Voice Message'), ('document_verified', 'Document Verified'), ('document_rejected', 'Document Rejected'), ('vehicle_approved', 'Vehicle Approved'), ('vehicle_suspended', 'Vehicle Suspended'), ('emergency_alert', 'Emergency Alert'), ('maintenance_reminder', 'Maintenance Reminder'), ('insurance_expiry', 'Insurance Expiry'), ('promotion', 'Promotion'), ('system_update', 'System Update')], max_length=30, unique=True)),
                ('channel', models.CharField(choices=[('push', 'Push Notification'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In-App Notification')], max_length=10)),
                ('title_template', models.CharField(max_length=200)),
                ('body_template', models.TextField()),
                ('sms_template', models.TextField(blank=True, null=True)),
                ('email_subject_template', models.CharField(blank=True, max_length=200, null=True)),
                ('email_html_template', models.TextField(blank=True, null=True)),
                ('push_sound', models.CharField(default='default', max_length=50)),
                ('push_badge_count', models.BooleanField(default=True)),
                ('push_category', models.CharField(blank=True, max_length=50, null=True)),
                ('variables', models.JSONField(default=list, help_text='List of template variables')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1, help_text='1=Low, 2=Normal, 3=High, 4=Critical')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Normal'), (3, 'High'), (4, 'Critical')], default=2)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.message')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='rides.ride')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('push', 'Push Notification'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In-App Notification')], max_length=10)),
                ('provider', models.CharField(blank=True, max_length=50, null=True)),
                ('provider_message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('success', models.BooleanField()),
                ('response_code', models.CharField(blank=True, max_length=10, null=True)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivery_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('push_ride_updates', models.BooleanField(default=True)),
                ('push_messages', models.BooleanField(default=True)),
                ('push_payments', models.BooleanField(default=True)),
                ('push_promotions', models.BooleanField(default=False)),
                ('push_system_updates', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('sms_ride_updates', models.BooleanField(default=True)),
                ('sms_emergency_only', models.BooleanField(default=False)),
                ('sms_verification', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('email_ride_receipts', models.BooleanField(default=True)),
                ('email_weekly_summary', models.BooleanField(default=True)),
                ('email_promotions', models.BooleanField(default=False)),
                ('email_system_updates', models.BooleanField(default=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(default='22:00')),
                ('quiet_hours_end', models.TimeField(default='07:00')),
                ('language', models.CharField(default='en', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('recipient_count', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('scheduled_at', models.DateTimeField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('context', models.JSONField(default=dict)),
                ('filters', models.JSONField(default=dict, help_text='User filters for targeting')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='notifications.notificationtemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceToken',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.TextField(unique=True)),
                ('platform', models.CharField(choices=[('ios', 'iOS'), ('android', 'Android'), ('web', 'Web')], max_length=10)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_version', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_used'],
                'unique_together': {('user', 'token')},
            },
        ),
        migrations.CreateModel(
            name='NotificationAnalytics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('channel', models.CharField(choices=[('push', 'Push Notification'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In-App Notification')], max_length=10)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('read_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('delivery_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('read_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('avg_delivery_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('avg_read_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='notifications.notificationtemplate')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('date', 'template', 'channel')},
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_e285de_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status', 'scheduled_at'], name='notificatio_status_a9c93f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['template', 'created_at'], name='notificatio_templat_6821fb_idx'),
        ),
    ]
